# Generated by Django 4.2.9 on 2024-01-17 17:32

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Geography',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('image', models.ImageField(null=True, upload_to='staticfiles', verbose_name='Изображение')),
                ('table', models.FileField(max_length=3000, null=True, upload_to='', verbose_name='Таблица')),
            ],
            options={
                'verbose_name': 'География',
                'verbose_name_plural': 'География',
                'db_table': 'geography',
            },
        ),
        migrations.CreateModel(
            name='Popularity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('image', models.ImageField(null=True, upload_to='staticfiles', verbose_name='Изображение')),
                ('table', models.FileField(max_length=3000, null=True, upload_to='', verbose_name='Таблица')),
            ],
            options={
                'verbose_name': 'Востребованность',
                'verbose_name_plural': 'Востребованности',
                'db_table': 'popularity',
            },
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=100, verbose_name='Название')),
                ('description', models.TextField(max_length=3000, verbose_name='Описание')),
                ('skills', models.CharField(max_length=255, verbose_name='Навыки')),
                ('company', models.CharField(max_length=255, verbose_name='Компания')),
                ('salary', models.CharField(max_length=25, verbose_name='Зарплата')),
                ('area_name', models.CharField(max_length=255, verbose_name='Местоположение')),
                ('published_at', models.TextField(verbose_name='Дата публикации')),
            ],
            options={
                'verbose_name': 'Вакансия',
                'verbose_name_plural': 'Вакансии',
                'db_table': 'vacancies',
            },
        ),
        migrations.CreateModel(
            name='SiteUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(default='', max_length=254, unique=True)),
                ('password', models.CharField(max_length=128, null=True)),
                ('username', models.CharField(max_length=128, null=True, unique=True)),
                ('last_login', models.DateTimeField(auto_now=True, null=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.group')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'site_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
